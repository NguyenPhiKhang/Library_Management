<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImageStore" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAx
        AC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABp
        AHQAeQAgAD0AIAA4ADAACv/bAEMABgQFBgUEBgYFBgcHBggKEAoKCQkKFA4PDBAXFBgYFxQWFhodJR8a
        GyMcFhYgLCAjJicpKikZHy0wLSgwJSgpKP/bAEMBBwcHCggKEwoKEygaFhooKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKP/AABEIALcBEwMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APeABRRSmug4RKQ0Z5opANpaM0UAFOApBTx0oAMU4CgCnAUhigUoFAHF
        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
</value>
  </data>
</root>